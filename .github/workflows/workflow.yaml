name: DB Workflow

on:
  schedule:
    - cron: "0 * * * *"     # Stündlich fetch_hourly
    - cron: "5 0 * * *"     # Täglich um 00:05 daily_combine_and_clean
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch_hourly:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Python 3.11 einrichten
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache für Poetry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            **/site-packages
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Poetry installieren
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          poetry --version

      - name: Abhängigkeiten installieren
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          poetry install --no-interaction --no-ansi

      - name: Stündliche Daten holen
        env:
          DB_CLIENT_ID: ${{ secrets.DB_CLIENT_ID }}
          DB_API_KEY: ${{ secrets.DB_API_KEY }}
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          poetry run python src/01_fetch_data.py

      # Änderungen committen und pushen (Hourly)
      - name: Änderungen committen und pushen (Hourly)
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Stündliches Update der Daten'
          file_pattern: |
            01_data/01_raw/API/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  daily_combine_and_clean:
    needs: [fetch_hourly]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Python 3.11 einrichten
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache für Poetry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            **/site-packages
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Poetry installieren
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          poetry --version

      - name: Abhängigkeiten installieren
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          poetry install --no-interaction --no-ansi

      # Vortag bestimmen
      - name: Gestern Datum bestimmen
        run: echo "DATE=$(date -d 'yesterday' '+%y%m%d')" >> $GITHUB_ENV

      - name: Tägliche Daten kombinieren
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          poetry run python src/03_combine_daily.py ${{ env.DATE }}

      - name: Daten bereinigen
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          poetry run python src/02_clean_data.py ${{ env.DATE }}

      - name: An combined anhängen
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          poetry run python src/04_append_to_combined.py ${{ env.DATE }}

      # Änderungen committen und pushen (Daily)
      - name: Änderungen committen und pushen (Daily)
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Tägliches Kombinieren und Bereinigen der Daten'
          file_pattern: |
            01_data/02_intermediate/*
            01_data/03_processed/combined.csv
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
