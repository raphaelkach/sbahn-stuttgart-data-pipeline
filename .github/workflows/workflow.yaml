name: DB Workflow

on:
  schedule:
    - cron: "0 * * * *"     # Jede volle Stunde (fetch_hourly)
    - cron: "5 0 * * *"     # TÃ¤glich um 00:05 (daily_combine_and_clean)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch_hourly:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Set environment variables
        run: |
          echo "DB_CLIENT_ID=${{ secrets.DB_CLIENT_ID }}" >> .env
          echo "DB_API_KEY=${{ secrets.DB_API_KEY }}" >> .env

      - name: Fetch Data Hourly
        run: poetry run python src/01_fetch_data.py

      - name: Configure Git (Hourly pre-pull)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # Debug: Zeige Git-Status vor dem Commit
      - name: Debug Git Status (Hourly)
        run: git status

      - name: Commit changes before pull (Hourly)
        run: |
          git add .
          git commit -m "Commit hourly changes before pull" || echo "No changes to commit"

      - name: Update local main
        run: git pull --rebase origin main

      # Jetzt nachdem wir auf main aktualisiert haben, nochmal commit/push der relevanten Dateien
      - name: Debug Git Status (Hourly after rebase)
        run: git status

      - name: Commit and push changes (Hourly)
        run: |
          git add 01_data/01_raw/API/*.csv
          if git diff --cached --quiet; then
            echo "No hourly changes to commit."
          else
            git commit -m "Add hourly data files [skip ci]"
            git push origin HEAD:main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  daily_combine_and_clean:
    needs: [fetch_hourly]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Set environment variables
        run: |
          echo "DB_CLIENT_ID=${{ secrets.DB_CLIENT_ID }}" >> .env
          echo "DB_API_KEY=${{ secrets.DB_API_KEY }}" >> .env

      - name: Combine Daily Data
        run: poetry run python src/03_combine_daily.py

      - name: Configure Git (Daily Combine pre-pull)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Debug Git Status (Daily Combine)
        run: git status

      - name: Commit changes before pull (Daily Combine)
        run: |
          git add .
          git commit -m "Commit daily combined data changes before pull" || echo "No changes to commit"

      - name: Update local main (Daily Combine)
        run: git pull --rebase origin main

      - name: Debug Git Status (Daily Combine after rebase)
        run: git status

      - name: Commit and push changes (Daily Combine)
        run: |
          git add 01_data/02_intermediate/*.csv
          if git diff --cached --quiet; then
            echo "No daily combined changes to commit."
          else
            git commit -m "Add daily combined data files [skip ci]"
            git push origin HEAD:main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine yesterday's date
        run: echo "DATE=$(date -d 'yesterday' '+%y%m%d')" >> $GITHUB_ENV

      - name: Clean Data
        run: poetry run python src/02_clean_data.py ${{ env.DATE }}

      - name: Append to combined
        run: poetry run python src/04_append_to_combined.py ${{ env.DATE }}

      - name: Configure Git (Combined pre-pull)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Debug Git Status (Combined)
        run: git status

      - name: Commit changes before pull (Combined)
        run: |
          git add .
          git commit -m "Commit combined data changes before pull" || echo "No changes to commit"

      - name: Update local main (Combined)
        run: git pull --rebase origin main

      - name: Debug Git Status (Combined after rebase)
        run: git status

      - name: Commit and push changes (Combined CSV)
        run: |
          git add 01_data/03_processed/combined.csv
          if git diff --cached --quiet; then
            echo "No combined changes to commit."
          else
            git commit -m "Update combined.csv [skip ci]"
            git push origin HEAD:main
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}